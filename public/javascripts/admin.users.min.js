"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{var e;const s=exports.MonTY;let t=exports.users;delete exports.users;const n=exports.availablePermissionValues;delete exports.availablePermissionValues;const a=document.querySelector("#tbody--users");function i(e){var n;e.preventDefault();const a=e.currentTarget.closest("tr"),i=null!==(n=a.dataset.userName)&&void 0!==n?n:"";bulmaJS.confirm({title:"Delete User",message:`Are you sure you want to delete ${i}?<br />\n        Note that if this is temporary, revoking log in permissions would be easier to restore.`,messageIsHtml:!0,contextualColorName:"warning",okButton:{text:"Yes, Delete User",callbackFunction:function(){cityssm.postJSON(s.urlPrefix+"/admin/doDeleteUser",{userName:i},e=>{const s=e;s.success&&(bulmaJS.alert({message:"User deleted successfully.",contextualColorName:"success"}),a.remove()),t=s.users})}}})}function o(e){var n;e.preventDefault();const a=e.currentTarget,i=null!==(n=a.closest("tr").dataset.userName)&&void 0!==n?n:"";cityssm.postJSON(s.urlPrefix+"/admin/doUpdateUserCanLogin",{userName:i,canLogin:a.value},e=>{const s=e;s.success?a.closest(".control").querySelector(".icon").innerHTML=`<i class="fas ${"1"===a.value?"fa-check":"fa-times"}" aria-hidden="true"></i>`:bulmaJS.alert({title:"Error Updating Permission",message:"Please try again.",contextualColorName:"danger"}),t=s.users})}function r(e){var n;e.preventDefault();const a=e.currentTarget,i=null!==(n=a.closest("tr").dataset.userName)&&void 0!==n?n:"";cityssm.postJSON(s.urlPrefix+"/admin/doUpdateUserIsAdmin",{userName:i,isAdmin:a.value},e=>{const s=e;s.success?a.closest(".control").querySelector(".icon").innerHTML=`<i class="fas ${"1"===a.value?"fa-check":"fa-times"}" aria-hidden="true"></i>`:bulmaJS.alert({title:"Error Updating Permission",message:"Please try again.",contextualColorName:"danger"}),t=s.users})}function l(e){e.preventDefault(),cityssm.postJSON(s.urlPrefix+"/admin/doSetUserPermission",e.currentTarget,e=>{e.success?bulmaJS.alert({message:"Permission updated successfully.",contextualColorName:"success"}):bulmaJS.alert({title:"Error Updating Permission",message:"Please try again.",contextualColorName:"danger"})})}function c(e){var t;let a;e.preventDefault();const i=null!==(t=e.currentTarget.closest("tr").dataset.userName)&&void 0!==t?t:"";cityssm.openHtmlModal("userAdmin-userPermissions",{onshow(e){a=e,e.querySelector(".modal-card-title").textContent=i,function(){var e,t;const o=a.querySelector("tbody");for(const[s,a]of Object.entries(n)){const n=document.createElement("tr");n.dataset.permissionKey=s,n.innerHTML=`<td class="is-vcentered">${s}</td>\n          <td>\n            <form>\n              <input name="userName" value="${i}" type="hidden" />\n              <input name="permissionKey" value="${s}" type="hidden" />\n              <div class="field has-addons">\n                <div class="control is-expanded">\n                  <div class="select is-fullwidth">\n                    <select name="permissionValue">\n                      <option value="">(Not Set)</option>\n                    </select>\n                  </div>\n                </div>\n                <div class="control">\n                  <button class="button is-success" type="submit">\n                    <i class="fas fa-save" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </td>`;for(const s of a)null===(e=n.querySelector("select"))||void 0===e||e.insertAdjacentHTML("beforeend",`<option value="${s}">${s}</option>`);null===(t=n.querySelector("form"))||void 0===t||t.addEventListener("submit",l),o.append(n)}cityssm.postJSON(s.urlPrefix+"/admin/doGetUserPermissions",{userName:i},e=>{var s,t;const n=e;let a=0;for(const[e,t]of Object.entries(n.userPermissions)){const n=o.querySelector(`tr[data-permission-key="${e}"]`);if(null===n){const n="form--permissionValue-"+(a+=1).toString();o.insertAdjacentHTML("beforeend",`<tr data-permission-key="${e}">\n                    <td class="is-vcentered is-italic">${e}</td>\n                    <td>\n                      <form id="${n}">\n                        <input name="userName" value="${i}" type="hidden" />\n                        <input name="permissionKey" value="${e}" type="hidden" />\n                        <div class="field has-addons">\n                          <div class="control is-expanded">\n                            <div class="select is-fullwidth">\n                              <select name="permissionValue">\n                                <option value="">(Not Set)</option>\n                                <option value="${t}" selected>${t}</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div class="control">\n                            <button class="button is-success" type="submit">\n                              <i class="fas fa-save" aria-hidden="true"></i>\n                            </button>\n                          </div>\n                        </div>\n                      </form>\n                    </td>\n                  </tr>`),null===(s=o.querySelector(`#${n}`))||void 0===s||s.addEventListener("submit",l)}else{const e=n.querySelector("select");null===e.querySelector(`option[value="${t}"]`)&&e.insertAdjacentHTML("beforeend",`<option>${t}</option>`),e.value=t}}null===(t=o.closest("table"))||void 0===t||t.classList.remove("is-hidden")})}()}})}function d(){var e,s,n,l;a.innerHTML="";for(const d of t){const t=document.createElement("tr");t.dataset.userName=d.userName,t.innerHTML=`<td class="is-vcentered">\n          ${d.userName}\n        </td>\n        <td>\n          <div class="control has-icons-left">\n            <div class="select">\n              <select data-field="canLogin">\n                <option value="1" ${d.canLogin?" selected":""}>\n                  Can Log In\n                </option>\n                <option value="0" ${d.canLogin?"":" selected"}>\n                  Access Denied\n                </option>\n              </select>\n            </div>\n            <span class="icon is-small is-left">\n              <i class="fas ${d.canLogin?"fa-check":"fa-times"}" aria-hidden="true"></i>\n            </span>\n          </div>\n        </td>\n        <td>\n          <div class="control has-icons-left">\n            <div class="select">\n              <select data-field="isAdmin">\n                <option value="0" ${d.isAdmin?"":" selected"}>\n                  No Admin Access\n                </option>\n                <option value="1" ${d.isAdmin?" selected":""}>\n                  Administrator\n                </option>\n              </select>\n            </div>\n            <span class="icon is-small is-left">\n              <i class="fas ${d.isAdmin?"fa-check":"fa-times"}" aria-hidden="true"></i>\n            </span>\n          </div>\n        </td>\n        <td class="has-width-1 has-text-centered">\n          <button class="button is-user-permissions-button" type="button">\n            <span class="icon is-small"><i class="fas fa-th-list" aria-hidden="true"></i></span>\n            <span>Permissions</span>\n          </button>\n        </td>\n        <td class="has-width-1">\n          <button class="button is-danger is-delete-button" type="button" aria-label="Delete">\n            <span class="icon is-small"><i class="fas fa-trash" aria-hidden="true"></i></span>\n          </button>\n        </td>`,null===(e=t.querySelector('select[data-field="canLogin"]'))||void 0===e||e.addEventListener("change",o),null===(s=t.querySelector('select[data-field="isAdmin"]'))||void 0===s||s.addEventListener("change",r),null===(n=t.querySelector(".is-user-permissions-button"))||void 0===n||n.addEventListener("click",c),null===(l=t.querySelector(".is-delete-button"))||void 0===l||l.addEventListener("click",i),a.append(t)}}null===(e=document.querySelector(".is-add-user-button"))||void 0===e||e.addEventListener("click",()=>{let e;function n(n){n.preventDefault(),cityssm.postJSON(s.urlPrefix+"/admin/doAddUser",n.currentTarget,s=>{const n=s;n.success?(e(),bulmaJS.alert({message:"User added successfully.",contextualColorName:"success"}),t=n.users,d()):bulmaJS.alert({title:"Error Adding User",message:"Please ensure the user does not already have access, then try again.",contextualColorName:"danger"})})}cityssm.openHtmlModal("userAdmin-addUser",{onshown(s,t){var a;e=t,s.querySelector("#userAdd--userName").value="",null===(a=s.querySelector("form"))||void 0===a||a.addEventListener("submit",n)}})}),d()})();