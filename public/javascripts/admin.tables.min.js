"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{var e,t,s;const n=exports.MonTY;function a(e){e.currentTarget.closest("tr").classList.add("has-background-warning-light")}let o=exports.absenceTypes;function r(e){const t=e.currentTarget.closest("tr"),s=t.dataset.absenceTypeKey,a=t.querySelector("input").value;cityssm.postJSON(n.urlPrefix+"/admin/doUpdateAbsenceType",{absenceTypeKey:s,absenceType:a},e=>{e.success&&(bulmaJS.alert({message:"Absence type updated successfully."}),t.classList.remove("has-background-warning-light"))})}function l(e){const t=e.currentTarget,s=t.closest("tr").dataset.absenceTypeKey;cityssm.postJSON(n.urlPrefix+"/admin/"+("up"===t.dataset.direction?"doMoveAbsenceTypeUp":"doMoveAbsenceTypeDown"),{absenceTypeKey:s,moveToEnd:e.shiftKey?"1":"0"},e=>{var t;const s=e;s.success?(o=s.absenceTypes,u()):bulmaJS.alert({title:"Error Moving Absence Type",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}function i(e){const t=e.currentTarget.closest("tr").dataset.absenceTypeKey;bulmaJS.confirm({title:"Delete Absence Type",message:"Are you sure you want to delete this absence type?",contextualColorName:"warning",okButton:{text:"Yes, Delete Absence Type",callbackFunction:function(){cityssm.postJSON(n.urlPrefix+"/admin/doDeleteAbsenceType",{absenceTypeKey:t},e=>{var t;const s=e;s.success?(o=s.absenceTypes,u()):bulmaJS.alert({title:"Error Deleting Absence Type",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}}})}function u(){var e,t;const s=document.querySelector("#container--absenceTypes");if(0===o.length)return void(s.innerHTML='<div class="message is-warning">\n        <p class="message-body">There are no active absence types.</p>\n        </div>');s.innerHTML='<table class="table is-striped is-hoverable is-fade-hoverable is-fullwidth">\n      <thead>\n        <tr>\n          <th>Absence Type</th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Update Absence Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Move Absence Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Delete Absence Type</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      </table>';const n=s.querySelector("tbody");for(const s of o){const o=document.createElement("tr");o.dataset.absenceTypeKey=s.absenceTypeKey,o.innerHTML='<td>\n        <input class="input" name="absenceType" maxlength="100" aria-label="Absence Type" required />\n        </td>\n        <td>\n          <button class="button is-success is-update-button" type="button" aria-label="Update Absence Type">\n            <i class="fas fa-save" aria-hidden="true"></i>\n          </button>\n        </td>\n        <td>\n          <div class="field has-addons">\n            <div class="control">\n              <button class="button is-up-button" data-direction="up" type="button" aria-label="Move Up">\n                <i class="fas fa-arrow-up" aria-hidden="true"></i>\n              </button>\n            </div>\n            <div class="control">\n              <button class="button is-down-button" data-direction="down" type="button" aria-label="Move Down">\n                <i class="fas fa-arrow-down" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n        <td>\n        <button class="button is-danger is-delete-button" type="button" aria-label="Delete Absence Type">\n          <i class="fas fa-trash" aria-hidden="true"></i>\n        </button>\n        </td>';const u=o.querySelector("input");u.value=s.absenceType,u.addEventListener("change",a),null===(e=o.querySelector(".is-update-button"))||void 0===e||e.addEventListener("click",r),o.querySelector(".is-up-button").addEventListener("click",l),o.querySelector(".is-down-button").addEventListener("click",l),null===(t=o.querySelector(".is-delete-button"))||void 0===t||t.addEventListener("click",i),n.append(o)}}delete exports.absenceTypes,null===(e=document.querySelector("#tab--absenceTypes .is-add-button"))||void 0===e||e.addEventListener("click",()=>{let e;function t(t){t.preventDefault(),cityssm.postJSON(n.urlPrefix+"/admin/doAddAbsenceType",t.currentTarget,t=>{var s;const n=t;n.success?(e(),bulmaJS.alert({message:"Absence type added successfully.",contextualColorName:"success"}),o=n.absenceTypes,u()):bulmaJS.alert({title:"Error Adding Absence Type",message:null!==(s=n.errorMessage)&&void 0!==s?s:"",contextualColorName:"danger"})})}cityssm.openHtmlModal("tableAdmin-addAbsenceType",{onshown(s,n){var a,o;bulmaJS.toggleHtmlClipped(),e=n,null===(a=s.querySelector("input"))||void 0===a||a.focus(),null===(o=s.querySelector("form"))||void 0===o||o.addEventListener("submit",t)},onremoved(){bulmaJS.toggleHtmlClipped()}})}),u();let c=exports.callOutResponseTypes;function d(e){const t=e.currentTarget.closest("tr"),s=t.dataset.responseTypeId,a=t.querySelector("input").value,o=t.querySelector("select").value;cityssm.postJSON(n.urlPrefix+"/admin/doUpdateCallOutResponseType",{responseTypeId:s,responseType:a,isSuccessful:o},e=>{e.success&&(bulmaJS.alert({message:"Response type updated successfully."}),t.classList.remove("has-background-warning-light"))})}function p(e){const t=e.currentTarget,s=t.closest("tr").dataset.responseTypeId;cityssm.postJSON(n.urlPrefix+"/admin/"+("up"===t.dataset.direction?"doMoveCallOutResponseTypeUp":"doMoveCallOutResponseTypeDown"),{responseTypeId:s,moveToEnd:e.shiftKey?"1":"0"},e=>{var t;const s=e;s.success?(c=s.callOutResponseTypes,y()):bulmaJS.alert({title:"Error Moving Response Type",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}function b(e){const t=e.currentTarget.closest("tr").dataset.responseTypeId;bulmaJS.confirm({title:"Delete Response Type",message:"Are you sure you want to delete this response type?",contextualColorName:"warning",okButton:{text:"Yes, Delete Response Type",callbackFunction:function(){cityssm.postJSON(n.urlPrefix+"/admin/doDeleteCallOutResponseType",{responseTypeId:t},e=>{var t;const s=e;s.success?(c=s.callOutResponseTypes,y()):bulmaJS.alert({title:"Error Deleting Response Type",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}}})}function y(){var e,t,s;const n=document.querySelector("#container--callOutResponseTypes");if(0===o.length)return void(n.innerHTML='<div class="message is-warning">\n        <p class="message-body">There are no active response types.</p>\n        </div>');n.innerHTML='<table class="table is-striped is-hoverable is-fade-hoverable is-fullwidth">\n      <thead>\n        <tr>\n          <th>Response Type</th>\n          <th>Is Successful</th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Update Response Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Move Response Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Delete Response Type</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      </table>';const r=n.querySelector("tbody");for(const n of c){const o=document.createElement("tr");o.dataset.responseTypeId=n.responseTypeId.toString(),o.innerHTML='<td>\n        <input class="input" name="responseType" maxlength="100" aria-label="Call Out Response Type" required />\n        </td>\n        <td>\n          <div class="select is-fullwidth">\n            <select name="isSuccessful" required>\n              <option value="1">Successful</option>\n              <option value="0">Unsuccessful</option>\n            </select>\n          </div>\n        </td>\n        <td>\n          <button class="button is-success is-update-button" type="button" aria-label="Update Response Type">\n            <i class="fas fa-save" aria-hidden="true"></i>\n          </button>\n        </td>\n        <td>\n          <div class="field has-addons">\n            <div class="control">\n              <button class="button is-up-button" data-direction="up" type="button" aria-label="Move Up">\n                <i class="fas fa-arrow-up" aria-hidden="true"></i>\n              </button>\n            </div>\n            <div class="control">\n              <button class="button is-down-button" data-direction="down" type="button" aria-label="Move Down">\n                <i class="fas fa-arrow-down" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n        <td>\n        <button class="button is-danger is-delete-button" type="button" aria-label="Delete Response Type">\n          <i class="fas fa-trash" aria-hidden="true"></i>\n        </button>\n        </td>';const l=o.querySelector("input");l.value=n.responseType,l.addEventListener("change",a),null===(e=o.querySelector("select"))||void 0===e||e.addEventListener("change",a),n.isSuccessful||(o.querySelector("select").value="0"),null===(t=o.querySelector(".is-update-button"))||void 0===t||t.addEventListener("click",d),o.querySelector(".is-up-button").addEventListener("click",p),o.querySelector(".is-down-button").addEventListener("click",p),null===(s=o.querySelector(".is-delete-button"))||void 0===s||s.addEventListener("click",b),r.append(o)}}delete exports.callOutResponseTypes,null===(t=document.querySelector("#tab--callOutResponseTypes .is-add-button"))||void 0===t||t.addEventListener("click",()=>{let e;function t(t){t.preventDefault(),cityssm.postJSON(n.urlPrefix+"/admin/doAddCallOutResponseType",t.currentTarget,t=>{var s;const n=t;n.success?(e(),bulmaJS.alert({message:"Response type added successfully.",contextualColorName:"success"}),c=n.callOutResponseTypes,y()):bulmaJS.alert({title:"Error Adding Response Type",message:null!==(s=n.errorMessage)&&void 0!==s?s:"",contextualColorName:"danger"})})}cityssm.openHtmlModal("tableAdmin-addCallOutResponseType",{onshown(s,n){var a,o;bulmaJS.toggleHtmlClipped(),e=n,null===(a=s.querySelector("input"))||void 0===a||a.focus(),null===(o=s.querySelector("form"))||void 0===o||o.addEventListener("submit",t)},onremoved(){bulmaJS.toggleHtmlClipped()}})}),y();let v=exports.afterHoursReasons;function m(e){const t=e.currentTarget.closest("tr"),s=t.dataset.afterHoursReasonId,a=t.querySelector("input").value;cityssm.postJSON(n.urlPrefix+"/admin/doUpdateAfterHoursReason",{afterHoursReasonId:s,afterHoursReason:a},e=>{e.success&&(bulmaJS.alert({message:"Reason updated successfully."}),t.classList.remove("has-background-warning-light"))})}function f(e){const t=e.currentTarget,s=t.closest("tr").dataset.afterHoursReasonId;cityssm.postJSON(n.urlPrefix+"/admin/"+("up"===t.dataset.direction?"doMoveAfterHoursReasonUp":"doMoveAfterHoursReasonDown"),{afterHoursReasonId:s,moveToEnd:e.shiftKey?"1":"0"},e=>{var t;const s=e;s.success?(v=s.afterHoursReasons,g()):bulmaJS.alert({title:"Error Moving Reason",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}function h(e){const t=e.currentTarget.closest("tr").dataset.afterHoursReasonId;bulmaJS.confirm({title:"Delete Reason",message:"Are you sure you want to delete this after hours reason?",contextualColorName:"warning",okButton:{text:"Yes, Delete Reason",callbackFunction:function(){cityssm.postJSON(n.urlPrefix+"/admin/doDeleteAfterHoursReason",{afterHoursReasonId:t},e=>{var t;const s=e;s.success?(v=s.afterHoursReasons,g()):bulmaJS.alert({title:"Error Deleting Reason",message:null!==(t=s.errorMessage)&&void 0!==t?t:"",contextualColorName:"danger"})})}}})}function g(){var e,t;const s=document.querySelector("#container--afterHoursReasons");if(0===o.length)return void(s.innerHTML='<div class="message is-warning">\n        <p class="message-body">There are no active active hours reasons.</p>\n        </div>');s.innerHTML='<table class="table is-striped is-hoverable is-fade-hoverable is-fullwidth">\n      <thead>\n        <tr>\n          <th>Reason</th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Update Reason</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Move Reason</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Delete Reason</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      </table>';const n=s.querySelector("tbody");for(const s of v){const o=document.createElement("tr");o.dataset.afterHoursReasonId=s.afterHoursReasonId.toString(),o.innerHTML='<td>\n        <input class="input" name="afterHoursReason" maxlength="100" aria-label="After Hours Reason" required />\n        </td>\n        <td>\n          <button class="button is-success is-update-button" type="button" aria-label="Update Reason">\n            <i class="fas fa-save" aria-hidden="true"></i>\n          </button>\n        </td>\n        <td>\n          <div class="field has-addons">\n            <div class="control">\n              <button class="button is-up-button" data-direction="up" type="button" aria-label="Move Up">\n                <i class="fas fa-arrow-up" aria-hidden="true"></i>\n              </button>\n            </div>\n            <div class="control">\n              <button class="button is-down-button" data-direction="down" type="button" aria-label="Move Down">\n                <i class="fas fa-arrow-down" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n        <td>\n        <button class="button is-danger is-delete-button" type="button" aria-label="Delete Reason">\n          <i class="fas fa-trash" aria-hidden="true"></i>\n        </button>\n        </td>';const r=o.querySelector("input");r.value=s.afterHoursReason,r.addEventListener("change",a),null===(e=o.querySelector(".is-update-button"))||void 0===e||e.addEventListener("click",m),o.querySelector(".is-up-button").addEventListener("click",f),o.querySelector(".is-down-button").addEventListener("click",f),null===(t=o.querySelector(".is-delete-button"))||void 0===t||t.addEventListener("click",h),n.append(o)}}delete exports.afterHoursReasons,null===(s=document.querySelector("#tab--afterHoursReasons .is-add-button"))||void 0===s||s.addEventListener("click",()=>{let e;function t(t){t.preventDefault(),cityssm.postJSON(n.urlPrefix+"/admin/doAddAfterHoursReason",t.currentTarget,t=>{var s;const n=t;n.success?(e(),bulmaJS.alert({message:"Reason added successfully.",contextualColorName:"success"}),v=n.afterHoursReasons,g()):bulmaJS.alert({title:"Error Adding Reason",message:null!==(s=n.errorMessage)&&void 0!==s?s:"",contextualColorName:"danger"})})}cityssm.openHtmlModal("tableAdmin-addAfterHoursReason",{onshown(s,n){var a,o;bulmaJS.toggleHtmlClipped(),e=n,null===(a=s.querySelector("input"))||void 0===a||a.focus(),null===(o=s.querySelector("form"))||void 0===o||o.addEventListener("submit",t)},onremoved(){bulmaJS.toggleHtmlClipped()}})}),g()})();