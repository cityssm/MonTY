"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{const e=exports.MonTY;let t=exports.absenceTypes;function n(t){const n=t.currentTarget.closest("tr"),s=n.dataset.absenceTypeKey,a=n.querySelector("input").value;cityssm.postJSON(e.urlPrefix+"/admin/doUpdateAbsenceType",{absenceTypeKey:s,absenceType:a},e=>{e.success&&bulmaJS.alert({message:"Absence type updated successfully."})})}function s(n){const s=n.currentTarget,a=s.closest("tr").dataset.absenceTypeKey;cityssm.postJSON(e.urlPrefix+"/admin/"+("up"===s.dataset.direction?"doMoveAbsenceTypeUp":"doMoveAbsenceTypeDown"),{absenceTypeKey:a,moveToEnd:n.shiftKey?"1":"0"},e=>{var n;const s=e;s.success?(t=s.absenceTypes,o()):bulmaJS.alert({title:"Error Moving Absence Type",message:null!==(n=s.errorMessage)&&void 0!==n?n:"",contextualColorName:"danger"})})}function a(n){const s=n.currentTarget.closest("tr").dataset.absenceTypeKey;bulmaJS.confirm({title:"Delete Absence Type",message:"Are you sure you want to delete this absence type?",contextualColorName:"warning",okButton:{text:"Yes, Delete Absence Type",callbackFunction:function(){cityssm.postJSON(e.urlPrefix+"/admin/doDeleteAbsenceType",{absenceTypeKey:s},e=>{var n;const s=e;s.success?(t=s.absenceTypes,o()):bulmaJS.alert({title:"Error Deleting Absence Type",message:null!==(n=s.errorMessage)&&void 0!==n?n:"",contextualColorName:"danger"})})}}})}function o(){var e,o;const c=document.querySelector("#container--absenceTypes");if(0===t.length)return void(c.innerHTML='<div class="message is-warning">\n        <p class="message-body">There are no active absence types.</p>\n        </div>');c.innerHTML='<table class="table is-striped is-hoverable is-fullwidth">\n      <thead>\n        <tr>\n          <th>Absence Type</th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Update Absence Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Move Absence Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Delete Absence Type</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      </table>';const r=c.querySelector("tbody");for(const c of t){const t=document.createElement("tr");t.dataset.absenceTypeKey=c.absenceTypeKey,t.innerHTML='<td>\n        <input class="input" name="absenceType" maxlength="100" required />\n        </td>\n        <td>\n          <button class="button is-success is-update-button" type="button" aria-label="Update Absence Type">\n            <i class="fas fa-save" aria-hidden="true"></i>\n          </button>\n        </td>\n        <td>\n          <div class="field has-addons">\n            <div class="control">\n              <button class="button is-up-button" data-direction="up" type="button" aria-label="Move Up">\n                <i class="fas fa-arrow-up" aria-hidden="true"></i>\n              </button>\n            </div>\n            <div class="control">\n              <button class="button is-down-button" data-direction="down" type="button" aria-label="Move Down">\n                <i class="fas fa-arrow-down" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n        <td>\n        <button class="button is-danger is-delete-button" type="button" aria-label="Delete Absence Type">\n          <i class="fas fa-trash" aria-hidden="true"></i>\n        </button>\n        </td>',t.querySelector("input").value=c.absenceType,null===(e=t.querySelector(".is-update-button"))||void 0===e||e.addEventListener("click",n),t.querySelector(".is-up-button").addEventListener("click",s),t.querySelector(".is-down-button").addEventListener("click",s),null===(o=t.querySelector(".is-delete-button"))||void 0===o||o.addEventListener("click",a),r.append(t)}}delete exports.absenceTypes,o();exports.callOutResponseTypes;delete exports.callOutResponseTypes})();