"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{const e=exports.MonTY,n=exports.absenceTypes,t=exports.employees,s=exports.absencesCanUpdate,o=exports.returnsToWorkCanUpdate;let a=exports.absenceRecords,r=exports.returnToWorkRecords;function l(){var e,n,t;const s=document.querySelector("#container--absences");if(null===s)return;if(0===a.length)return void(s.innerHTML='<div class="message is-info">\n        <p class="message-body">There are no recent absence records to show.</p>\n        </div>');const o=document.createElement("div");o.className="panel";let r=0;for(const s of a){const a=new Date(s.absenceDateTime),l=document.createElement("div");l.className="panel-block is-block",Date.now()-a.getTime()<=864e5&&(l.classList.add("has-background-success-light"),r+=1),l.innerHTML=`<div class="columns">\n        <div class="column is-narrow">\n          <i class="fas fa-sign-out-alt" aria-hidden="true"></i>\n        </div>\n        <div class="column">\n          <strong data-tooltip="Absence Date">\n            ${a.toLocaleDateString()}\n          </strong>\n        </div>\n        <div class="column">\n          <strong>${s.employeeName}</strong><br />\n          <span class="is-size-7">${null!==(e=s.employeeNumber)&&void 0!==e?e:""}</span>\n        </div>\n        <div class="column">\n          <strong data-tooltip="Absence Type">${null!==(n=s.absenceType)&&void 0!==n?n:s.absenceTypeKey}</strong><br />\n          <span class="is-size-7">${null!==(t=s.recordComment)&&void 0!==t?t:""}</span>\n        </div>\n        </div>`,o.append(l)}s.innerHTML="",s.append(o),document.querySelector('#menu--attendance a[href="#tab--absences"] .tag').textContent=r.toString()}function c(){var e,n,t;const s=document.querySelector("#container--returnsToWork");if(null===s)return;if(0===a.length)return void(s.innerHTML='<div class="message is-info">\n        <p class="message-body">There are no recent return to work records to show.</p>\n        </div>');const o=document.createElement("div");o.className="panel";let l=0;for(const s of r){const a=new Date(s.returnDateTime),r=document.createElement("div");r.className="panel-block is-block",Date.now()-a.getTime()<=864e5&&(r.classList.add("has-background-success-light"),l+=1),r.innerHTML=`<div class="columns">\n        <div class="column is-narrow">\n          <i class="fas fa-sign-in-alt" aria-hidden="true"></i>\n        </div>\n        <div class="column">\n          <strong data-tooltip="Return Date">${a.toLocaleDateString()}</strong>\n        </div>\n        <div class="column">\n          <strong>${s.employeeName}</strong><br />\n          <span class="is-size-7">${null!==(e=s.employeeNumber)&&void 0!==e?e:""}</span>\n        </div>\n        <div class="column">\n          <strong data-tooltip="Return Shift">${null!==(n=s.returnShift)&&void 0!==n?n:"(No Shift)"}</strong><br />\n          <span class="is-size-7">${null!==(t=s.recordComment)&&void 0!==t?t:""}</span>\n        </div>\n        </div>`,o.append(r)}s.innerHTML="",s.append(o),document.querySelector('#menu--attendance a[href="#tab--returnsToWork"] .tag').textContent=l.toString()}function i(i){let d,u,m="";function p(){const e=d.querySelector("#callInAdd--employeeNumber"),n=e.value.toLowerCase();if(n===m)return;m=n;const s=d.querySelector("#callInAdd--employeeName");s.value="";const o=t.filter(e=>n.length>=e.employeeNumber.length/2&&e.employeeNumber.toLowerCase().endsWith(n));1===o.length&&(e.value=o[0].employeeNumber,m=o[0].employeeNumber.toLowerCase(),s.value=(o[0].employeeGivenName+" "+o[0].employeeSurname).trim())}function v(){const e=d.querySelectorAll('input[name="callInType"]');for(const n of e){const e=n.closest("label"),t=d.querySelector(`fieldset[data-call-in-type="${n.value}"]`);n.checked?(e.classList.add("is-link"),e.querySelector(".icon").innerHTML='<i class="fas fa-check" aria-hidden="true"></i>',t.disabled=!1,t.classList.remove("is-hidden")):(e.classList.remove("is-link"),e.querySelector(".icon").innerHTML='<i class="fas fa-minus" aria-hidden="true"></i>',t.classList.add("is-hidden"),t.disabled=!0)}}function y(n){n.preventDefault(),cityssm.postJSON(e.urlPrefix+"/attendance/doRecordCallIn",n.currentTarget,e=>{const n=e;if(n.success)switch(u(),n.callInType){case"absence":a=n.absenceRecords,l();break;case"returnToWork":r=n.returnToWorkRecords,c()}})}cityssm.openHtmlModal("callIn-add",{onshow(e){var t,a;if(d=e,s){e.querySelector("#callInAdd--absenceDateString-absence").valueAsDate=new Date;const t=e.querySelector("#callInAdd--absenceTypeKey-absence");for(const e of n){const n=document.createElement("option");n.value=e.absenceTypeKey,n.textContent=e.absenceType,t.append(n)}}else null===(t=e.querySelector("#callInAdd--callInType_absence"))||void 0===t||t.remove();o||null===(a=e.querySelector("#callInAdd--callInType_returnToWork"))||void 0===a||a.remove()},onshown(e,n){var t,s,o,a;u=n,null===(t=e.querySelector("form"))||void 0===t||t.addEventListener("submit",y),null===(s=e.querySelector("#callInAdd--employeeNumber"))||void 0===s||s.addEventListener("keyup",p),null===(o=e.querySelector("#callInAdd--callInType_absence"))||void 0===o||o.addEventListener("change",v),null===(a=e.querySelector("#callInAdd--callInType_returnToWork"))||void 0===a||a.addEventListener("change",v)}})}if(s||o){const e=document.querySelectorAll(".is-new-call-in-button");for(const n of e)n.addEventListener("click",i)}l(),c()})();